@*@model IEnumerable<techloops.Models.Client>*@
@model techloops.Controllers.Pagination<techloops.Models.Client>

@{
    ViewData["Title"] = "Contacts";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mb-3">Contact List</h2>

<form asp-action="Index" method="get">
    <p>
        Filter by Contact ID: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn btn-primary" /> |
        <a asp-action="Index">All Contacts</a>
    </p>
</form>

<table class="table">
    <thead class="bg-secondary font-weight-bold">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Id)
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["FirstNameSortParm"]">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().FirstName)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["LastNameSortParm"]">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().LastName)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    <a class="text-success" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a class="text-info" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a class="text-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="mb-5">
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link">Previous</a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@i"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="page-link">
                    @i
                </a>
            </li>
        }
        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link">Next</a>
        </li>
    </ul>
</div>